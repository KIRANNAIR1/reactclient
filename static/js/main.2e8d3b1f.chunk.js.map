{"version":3,"sources":["helper/Auth.js","components/layout/AppNavbar.js","components/layout/Sidebar.js","components/clients/Clients.js","components/layout/Dashboard.js","reducers/notifyReducers.js","store.js","actions/types.js","reducers/settingsReducers.js","components/clients/AddClients.js","components/clients/ClientDetails.js","components/clients/EditClients.js","actions/notifyActions.js","components/layout/Alert.js","components/auth/Login.js","components/auth/Register.js","components/settings/Settings.js","actions/settingActions.js","App.js","serviceWorker.js","index.js"],"names":["locationHelper","locationHelperBuilder","UserIsAuthenticated","createBrowserHistory","connectedRouterRedirect","wrapperDisplayName","allowRedirectBack","redirectPath","state","ownProps","getRedirectQueryParam","authenticatingSelector","_ref","_ref$firebase","firebase","auth","isInitializing","profile","isLoaded","authenticatedSelector","_ref2","isEmpty","UserIsNotAuthenticated","_ref3","_ref3$firebase","_ref4","AppNavbar","isAuthenticated","onLogoutClick","e","preventDefault","_this$props","_this","props","history","logout","this","allowRegisteration","settings","react_default","a","createElement","className","react_router_dom","to","type","data-toggle","data-target","id","href","email","style","color","onClick","uid","Component","compose","firebaseConnect","connect","Sidebar","Clients","totalowed","clients","parseFloat","toFixed","map","client","key","firstName","lastName","balance","concat","role","reduce","total","toString","firestoreConnect","collection","firestore","ordered","Dashboard","clients_Clients","initialState","message","messageTypes","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","createStoreWithFirebase","reactReduxFirebase","userProfile","useFirestoreForProfile","reduxFirestore","createStore","rootReducer","combineReducers","firebaseReducer","firestoreReducer","notify","arguments","length","undefined","action","Object","objectSpread","messageType","disableBalanceOnAdd","payload","disableBalanceOnEdit","localStorage","getItem","setItem","JSON","stringify","store","parse","window","__REDUX_DEVTOOLS_EXTENSION__","AddClients","phone","onSubmit","newClient","add","then","push","onChange","setState","defineProperty","target","name","value","_this$props$settings","htmlFor","placeholder","disabled","ClientDetails","showBalanceUpdate","balanceUpdateAmount","balanceSubmit","clientUpdate","update","doc","onDelete","_this$props2","delete","_this2","_this$state","balanceForm","classnames","text-danger","text-success","storeAs","match","params","EditClients","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","updClient","firstNameInput","current","lastNameInput","balanceInput","phoneInput","emailInput","React","createRef","ref","defaultValue","notifyUser","Alert","alert-success","alert-danger","Login","password","login","catch","err","_this$props$notify","layout_Alert","required","Register","createUser","Settings","allowRegisterationOnChange","setAllowRegisteration","disableBalanceOnAddOnChange","setDisableBalanceOnAdd","disableBalanceOnEditOnChange","setDisableBalanceOnEdit","checked","App","react_redux_es","layout_AppNavbar","react_router","exact","path","component","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","error","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.2e8d3b1f.chunk.js","sourcesContent":["import locationHelperBuilder from 'redux-auth-wrapper/history4/locationHelper';\r\nimport { connectedRouterRedirect } from 'redux-auth-wrapper/history4/redirect';\r\nimport { createBrowserHistory } from 'history';\r\n\r\n//import createHistory from 'history/createBrowserHistory';\r\n\r\n//import LoadingScreen from 'components/LoadingScreen'; // change it to your custom component\r\n\r\nconst locationHelper = locationHelperBuilder({});\r\nconst history = createBrowserHistory();\r\n\r\nexport const UserIsAuthenticated = connectedRouterRedirect({\r\n  wrapperDisplayName: 'UserIsAuthenticated',\r\n  //AuthenticatingComponent: LoadingScreen,\r\n  allowRedirectBack: true,\r\n  redirectPath: (state, ownProps) =>\r\n    locationHelper.getRedirectQueryParam(ownProps) || '/login',\r\n  authenticatingSelector: ({ firebase: { auth, profile, isInitializing } }) =>\r\n    !auth.isLoaded || isInitializing === true,\r\n  authenticatedSelector: ({ firebase: { auth } }) =>\r\n    auth.isLoaded && !auth.isEmpty\r\n});\r\n\r\nexport const UserIsNotAuthenticated = connectedRouterRedirect({\r\n  wrapperDisplayName: 'UserIsNotAuthenticated',\r\n  //AuthenticatingComponent: LoadingScreen,\r\n  allowRedirectBack: false,\r\n  redirectPath: (state, ownProps) =>\r\n    locationHelper.getRedirectQueryParam(ownProps) || '/',\r\n  authenticatingSelector: ({ firebase: { auth, isInitializing } }) =>\r\n    !auth.isLoaded || isInitializing === true,\r\n  authenticatedSelector: ({ firebase: { auth } }) =>\r\n    auth.isLoaded && auth.isEmpty\r\n});\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { firebaseConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass AppNavbar extends Component {\r\n  state = {\r\n    isAuthenticated: false\r\n  };\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    const { isAuthenticated } = state;\r\n    const { auth } = props;\r\n\r\n    if (auth.uid) {\r\n      return { isAuthenticated: true };\r\n    } else {\r\n      return { isAuthenticated: false };\r\n    }\r\n  }\r\n  onLogoutClick = e => {\r\n    e.preventDefault();\r\n\r\n    const { firebase, history } = this.props;\r\n    firebase.logout();\r\n  };\r\n\r\n  render() {\r\n    const { isAuthenticated } = this.state;\r\n    const { allowRegisteration } = this.props.settings;\r\n    const { auth } = this.props;\r\n\r\n    return (\r\n      <nav className=\"navbar navbar-expand-md navbar-dark bg-primary mb-4\">\r\n        <div className=\"container\">\r\n          <Link to=\"/\" className=\"navbar-brand\">\r\n            Client panel\r\n          </Link>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#navbarMain\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\" />\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarMain\">\r\n            <ul className=\"navbar-nav mr-auto\">\r\n              {isAuthenticated ? (\r\n                <li className=\"nav-item\">\r\n                  <Link to=\"/\" className=\"nav-link\">\r\n                    Dashboard\r\n                  </Link>\r\n                </li>\r\n              ) : null}\r\n            </ul>\r\n            {isAuthenticated ? (\r\n              <ul className=\"navbar-nav ml-auto\">\r\n                <li className=\"nav-item\">\r\n                  <a href=\"#!\" className=\"nav-link\">\r\n                    {auth.email}\r\n                  </a>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <Link to=\"/settings\" className=\"nav-link\">\r\n                    Settings\r\n                  </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <Link\r\n                    to=\"#!\"\r\n                    className=\"nav-link\"\r\n                    style={{ color: 'white' }}\r\n                    onClick={this.onLogoutClick}\r\n                  >\r\n                    Logout\r\n                  </Link>\r\n                </li>\r\n              </ul>\r\n            ) : null}\r\n            {!isAuthenticated && allowRegisteration ? (\r\n              <ul className=\"navbar-nav \">\r\n                <li className=\"nav-item\">\r\n                  <Link to=\"/register\" className=\"nav-link\">\r\n                    Register\r\n                  </Link>\r\n                </li>\r\n                <li className=\"nav-link\">\r\n                  <Link to=\"/login\" className=\"nav-link\">\r\n                    Login\r\n                  </Link>\r\n                </li>\r\n              </ul>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nAppNavbar.propTypes = {\r\n  firebase: PropTypes.object.isRequired,\r\n  auth: PropTypes.object,\r\n  settings: PropTypes.object.isRequired\r\n};\r\n\r\nexport default compose(\r\n  firebaseConnect(),\r\n  connect((state, props) => ({\r\n    auth: state.firebase.auth,\r\n    settings: state.settings\r\n  }))\r\n)(AppNavbar);\r\n\r\n// Navbar is Class Component RCC\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default () => {\r\n  return (\r\n    <div className=\"col\">\r\n      <Link to=\"/client/add\" type=\"button\" className=\"btn btn-success btn-sm\">\r\n        <div className=\"fas fa-plus\">New</div>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Clients extends Component {\r\n  state = {\r\n    totalowed: null\r\n  };\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    const { clients } = props;\r\n\r\n    if (clients) {\r\n      const total = clients.reduce((total, client) => {\r\n        return total + parseFloat(client.balance.toString());\r\n      }, 0);\r\n      return { totalowed: total };\r\n    }\r\n    return null;\r\n  }\r\n\r\n  render() {\r\n    const { clients } = this.props;\r\n    const { totalowed } = this.state;\r\n\r\n    if (clients) {\r\n      return (\r\n        <div>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6\">\r\n              <h2>\r\n                <i className=\"fas fa-users\">Clients</i>\r\n              </h2>\r\n            </div>\r\n            <div className=\"col-md-6\">\r\n              <h2 className=\"text-right text-secondary\">\r\n                total\r\n                <span className=\"text-primary\">\r\n                  ${parseFloat(totalowed).toFixed(2)}\r\n                </span>\r\n              </h2>\r\n            </div>\r\n          </div>\r\n\r\n          <table className=\"table table-striped\">\r\n            <thead>\r\n              <tr>\r\n                <th>firstName</th>\r\n                <th>lastName</th>\r\n                <th>balance</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {clients.map(client => (\r\n                <tr key={client.id}>\r\n                  <td>\r\n                    {client.firstName} {client.lastName}\r\n                  </td>\r\n                  <td>{client.email}</td>\r\n                  <td>{client.balance}</td>\r\n                  <td>\r\n                    <Link\r\n                      to={`/client/${client.id}`}\r\n                      type=\"button\"\r\n                      className=\"btn btn-secondary btn-sm\"\r\n                    >\r\n                      <i className=\"fas fa-arrow-right\">Details</i>\r\n                    </Link>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"d-flex justify-content-center\">\r\n          <div className=\"spinner-border m-5\" role=\"status\">\r\n            <span className=\"sr-only\">Loading...</span>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nClients.propTypes = {\r\n  firestore: PropTypes.object.isRequired,\r\n  clients: PropTypes.array\r\n};\r\nexport default compose(\r\n  firestoreConnect([{ collection: 'clients' }]),\r\n  connect((state, props) => ({\r\n    clients: state.firestore.ordered.clients\r\n  }))\r\n)(Clients);\r\n","import React from 'react';\r\nimport Sidebar from './Sidebar';\r\nimport Clients from '../clients/Clients';\r\n\r\nexport default () => {\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-md-10\">\r\n        <Clients />\r\n      </div>\r\n      <div className=\"col md-2\">\r\n        <Sidebar />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { NOTIFY_USER } from '../actions/types';\r\n\r\nconst initialState = {\r\n  message: null,\r\n  messageTypes: null\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case NOTIFY_USER:\r\n      return {\r\n        ...state,\r\n        message: action.message,\r\n        messageType: action.messageType\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { createStore, combineReducers, compose } from 'redux';\r\nimport { reactReduxFirebase, firebaseReducer } from 'react-redux-firebase';\r\nimport { reduxFirestore, firestoreReducer } from 'redux-firestore';\r\nimport firebase from 'firebase';\r\nimport 'firebase/firestore';\r\nimport notifyReducers from './reducers/notifyReducers';\r\nimport settingsReducers from './reducers/settingsReducers';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: 'AIzaSyDgMV7iZ-YILZZUruILUpnrUoBvBJkyK_8',\r\n  authDomain: 'reactclientfb.firebaseapp.com',\r\n  databaseURL: 'https://reactclientfb.firebaseio.com',\r\n  projectId: 'reactclientfb',\r\n  storageBucket: 'reactclientfb.appspot.com',\r\n  messagingSenderId: '568961140235'\r\n};\r\n\r\nconst rrfConfig = {\r\n  userProfile: 'users',\r\n  useFirestoreForProfile: true\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n//const firestore = firebase.firestore();\r\n\r\nconst createStoreWithFirebase = compose(\r\n  reactReduxFirebase(firebase, rrfConfig),\r\n  reduxFirestore(firebase)\r\n)(createStore);\r\n\r\nconst rootReducer = combineReducers({\r\n  firebase: firebaseReducer,\r\n  firestore: firestoreReducer,\r\n  notify: notifyReducers,\r\n  settings: settingsReducers\r\n});\r\n\r\n//check in localstorage\r\nif (localStorage.getItem('settings') == null) {\r\n  // default settings\r\n  const defaultSettings = {\r\n    disableBalanceOnAdd: true,\r\n    disableBalanceOnEdit: false,\r\n    allowRegisteration: false\r\n  };\r\n  //set in localstorage \"key\", \"valule\"\r\n  localStorage.setItem('settings', JSON.stringify(defaultSettings));\r\n}\r\n\r\nconst initialState = { settings: JSON.parse(localStorage.getItem('settings')) };\r\n\r\nconst store = createStoreWithFirebase(\r\n  rootReducer,\r\n  initialState,\r\n  compose(\r\n    reactReduxFirebase(firebase),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  )\r\n);\r\n\r\nexport default store;\r\n","export const NOTIFY_USER = 'NOTIFY_USER';\r\nexport const DISABLE_BALANCE_ON_ADD = 'DISABLE_BALANCE_ON_ADD';\r\nexport const DISABLE_BALANCE_ON_EDIT = 'DISABLE_BALANCE_ON_EDIT';\r\nexport const ALLOW_REGISTERATION = 'ALLOW_REGISTERATION';\r\n","import {\r\n  ALLOW_REGISTERATION,\r\n  DISABLE_BALANCE_ON_ADD,\r\n  DISABLE_BALANCE_ON_EDIT\r\n} from '../actions/types';\r\n\r\nexport default function(state = {}, action) {\r\n  switch (action.type) {\r\n    case DISABLE_BALANCE_ON_ADD:\r\n      return {\r\n        ...state,\r\n        disableBalanceOnAdd: action.payload\r\n      };\r\n\r\n    case DISABLE_BALANCE_ON_EDIT:\r\n      return {\r\n        ...state,\r\n        disableBalanceOnEdit: action.payload\r\n      };\r\n\r\n    case ALLOW_REGISTERATION:\r\n      return {\r\n        ...state,\r\n        allowRegisteration: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass AddClients extends Component {\r\n  state = {\r\n    firstName: '',\r\n    lastName: '',\r\n    balance: '',\r\n    phone: '',\r\n    email: ''\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    const newClient = this.state;\r\n\r\n    const { firestore, history } = this.props;\r\n\r\n    if (newClient.balance === '') {\r\n      newClient.balance = 0;\r\n    }\r\n\r\n    firestore\r\n      .add({ collection: `clients` }, newClient)\r\n      .then(() => history.push('/'));\r\n  };\r\n\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  render() {\r\n    const {\r\n      disableBalanceOnAdd,\r\n      disableBalanceOnEdit,\r\n      allowRegisteration\r\n    } = this.props.settings;\r\n    return (\r\n      <div>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <Link to=\"/\" className=\"btn btn-link\">\r\n              <i className=\"fas fa-arrow-left\">Back to Dashboard</i>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"card\">\r\n          <div className=\"card-header\">Add Client</div>\r\n          <div className=\"card-body\">\r\n            <form onSubmit={this.onSubmit}>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"firstName\">firstName</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"firstName\"\r\n                  className=\"form-control\"\r\n                  value={this.state.firstName}\r\n                  onChange={this.onChange}\r\n                  placeholder=\"add first Name\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"lastName\">lastName</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"lastName\"\r\n                  className=\"form-control\"\r\n                  value={this.state.lastName}\r\n                  onChange={this.onChange}\r\n                  placeholder=\"add last Name\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"email\">email</label>\r\n                <input\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  className=\"form-control\"\r\n                  value={this.state.email}\r\n                  onChange={this.onChange}\r\n                  placeholder=\"add email\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"balance\">balance</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"balance\"\r\n                  className=\"form-control\"\r\n                  value={this.state.balance}\r\n                  onChange={this.onChange}\r\n                  placeholder=\"add balance\"\r\n                  disabled={disableBalanceOnAdd}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"phone\">phone</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"phone\"\r\n                  className=\"form-control\"\r\n                  value={this.state.phone}\r\n                  onChange={this.onChange}\r\n                  placeholder=\"add phone\"\r\n                />\r\n              </div>\r\n\r\n              <input\r\n                className=\"btn btn-primary btn-block\"\r\n                type=\"submit\"\r\n                value=\"Submit\"\r\n              />\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddClients.propTypes = {\r\n  firestore: PropTypes.object.isRequired,\r\n  settings: PropTypes.object.isRequired\r\n};\r\n\r\nexport default compose(\r\n  firestoreConnect(),\r\n  connect((state, props) => ({\r\n    settings: state.settings\r\n  }))\r\n)(AddClients);\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\nclass ClientDetails extends Component {\r\n  state = {\r\n    showBalanceUpdate: false,\r\n    balanceUpdateAmount: ''\r\n  };\r\n\r\n  balanceSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const { client, firestore } = this.props;\r\n    const { balanceUpdateAmount } = this.state;\r\n\r\n    const clientUpdate = {\r\n      balance: parseFloat(balanceUpdateAmount)\r\n    };\r\n\r\n    firestore.update({ collection: 'clients', doc: client.id }, clientUpdate);\r\n  };\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  onDelete = e => {\r\n    const { client, firestore, history } = this.props;\r\n\r\n    firestore\r\n      .delete({ collection: 'clients', doc: client.id })\r\n      .then(history.push('/'));\r\n  };\r\n\r\n  render() {\r\n    const { client } = this.props;\r\n    const { showBalanceUpdate, balanceUpdateAmount } = this.state;\r\n\r\n    let balanceForm = '';\r\n\r\n    if (showBalanceUpdate) {\r\n      balanceForm = (\r\n        <form onSubmit={this.balanceSubmit}>\r\n          <div className=\"input-group\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"balanceUpdateAmount\"\r\n              className=\"form-control\"\r\n              value={balanceUpdateAmount}\r\n              onChange={this.onChange}\r\n            />\r\n            <div className=\"input-group-append\">\r\n              <input\r\n                type=\"submit\"\r\n                value=\"update\"\r\n                className=\"btn btn-outline-dark\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </form>\r\n      );\r\n    } else {\r\n      balanceForm = null;\r\n    }\r\n\r\n    if (client) {\r\n      return (\r\n        <div>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6\">\r\n              <h2>\r\n                <Link to=\"/\" className=\"btn btn-link\">\r\n                  <i className=\"fas fa-arrow-right\">Backto Dashboard</i>\r\n                </Link>\r\n              </h2>\r\n            </div>\r\n            <div className=\"col-md-6\">\r\n              <div className=\"btn-group float-right\">\r\n                <Link to={`/client/edit/${client.id}`} className=\"btn btn-dark\">\r\n                  Edit\r\n                </Link>\r\n                <button className=\"btn btn-danger\" onClick={this.onDelete}>\r\n                  Delete\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <hr />\r\n          <div className=\"card\">\r\n            <div className=\"card-header\">\r\n              {client.firstName}\r\n              {'  '}\r\n              {client.lastName}\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-8 col-sm-6\">\r\n                  CLient ID :{' '}\r\n                  <span className=\"text-secondary\">{client.id}</span>\r\n                </div>\r\n                <div className=\"col-md-4 col-sm-6\">\r\n                  <h3 className=\"pull-right\">\r\n                    {' '}\r\n                    Balance :{' '}\r\n                    <span\r\n                      className={classnames({\r\n                        'text-danger': client.balance > 0,\r\n                        'text-success': client.balance === 0\r\n                      })}\r\n                    >\r\n                      {' '}\r\n                      ${parseFloat(client.balance).toFixed(2)}\r\n                    </span>\r\n                    <small>\r\n                      <a\r\n                        href=\"#!\"\r\n                        onClick={() =>\r\n                          this.setState({\r\n                            showBalanceUpdate: !this.state.showBalanceUpdate\r\n                          })\r\n                        }\r\n                      >\r\n                        {' '}\r\n                        <i className=\"fas fa-pencil-alt\" />\r\n                      </a>\r\n                    </small>\r\n                    {balanceForm}\r\n                  </h3>\r\n                </div>\r\n              </div>\r\n              <ul className=\"list-group\">\r\n                <li className=\"list-group-item\">{client.phone}</li>\r\n                <li className=\"list-group-item\">{client.email}</li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"d-flex justify-content-center\">\r\n          <div className=\"spinner-border m-5\" role=\"status\">\r\n            <span className=\"sr-only\">Loading...</span>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\nClientDetails.propTypes = {\r\n  firestore: PropTypes.object.isRequired\r\n};\r\nexport default compose(\r\n  firestoreConnect(props => [\r\n    { collection: 'clients', storeAs: 'client', doc: props.match.params.id }\r\n  ]), //  docs is to access the clients url by id\r\n  connect(({ firestore: { ordered } }, props) => ({\r\n    client: ordered.client && ordered.client[0]\r\n  }))\r\n)(ClientDetails);\r\n","import { Link } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport React, { Component } from 'react';\r\n\r\nclass EditClients extends Component {\r\n  constructor(props) {\r\n    super(props); // calls parent component the react component\r\n    //create refs\r\n    this.firstNameInput = React.createRef();\r\n    this.lastNameInput = React.createRef();\r\n    this.balanceInput = React.createRef();\r\n    this.phoneInput = React.createRef();\r\n    this.emailInput = React.createRef();\r\n  }\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const { client, firestore, history } = this.props;\r\n\r\n    //updated Client\r\n    const updClient = {\r\n      firstName: this.firstNameInput.current.value,\r\n      lastName: this.lastNameInput.current.value,\r\n      balance:\r\n        this.balanceInput.current.value === ''\r\n          ? 0\r\n          : this.balanceInput.current.value,\r\n      phone: this.phoneInput.current.value,\r\n      email: this.emailInput.current.value\r\n    };\r\n\r\n    firestore\r\n      .update({ collection: 'clients', doc: client.id }, updClient)\r\n      .then(history.push('/'));\r\n  };\r\n\r\n  render() {\r\n    const { client } = this.props;\r\n    const { disableBalanceOnEdit } = this.props.settings;\r\n\r\n    if (client) {\r\n      return (\r\n        <div>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6\">\r\n              <Link to=\"/\" className=\"btn btn-link\">\r\n                <i className=\"fas fa-arrow-left\">Back to Dashboard</i>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"card\">\r\n            <div className=\"card-header\">Add Client</div>\r\n            <div className=\"card-body\">\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"firstName\">firstName</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"firstName\"\r\n                    className=\"form-control\"\r\n                    ref={this.firstNameInput}\r\n                    defaultValue={client.firstName}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"lastName\">lastName</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"lastName\"\r\n                    className=\"form-control\"\r\n                    ref={this.lastNameInput}\r\n                    defaultValue={client.lastName}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"email\">email</label>\r\n                  <input\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    className=\"form-control\"\r\n                    ref={this.emailInput}\r\n                    defaultValue={client.email}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"balance\">balance</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"balance\"\r\n                    className=\"form-control\"\r\n                    ref={this.balanceInput}\r\n                    defaultValue={client.balance}\r\n                    disabled={disableBalanceOnEdit}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"phone\">phone</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"phone\"\r\n                    className=\"form-control\"\r\n                    ref={this.phoneInput}\r\n                    defaultValue={client.phone}\r\n                  />\r\n                </div>\r\n\r\n                <input\r\n                  className=\"btn btn-primary btn-block\"\r\n                  type=\"submit\"\r\n                  value=\"Submit\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"d-flex justify-content-center\">\r\n          <div className=\"spinner-border m-5\" role=\"status\">\r\n            <span className=\"sr-only\">Loading...</span>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nEditClients.propTypes = {\r\n  firestore: PropTypes.object.isRequired,\r\n  settings: PropTypes.object.isRequired\r\n};\r\n\r\nexport default compose(\r\n  firestoreConnect(props => [\r\n    { collection: 'clients', storeAs: 'client', doc: props.match.params.id }\r\n  ]), //  docs is to access the clients url by id\r\n  connect(({ firestore: { ordered }, settings }, props) => ({\r\n    client: ordered.client && ordered.client[0],\r\n    settings: settings\r\n  }))\r\n)(EditClients);\r\n","import { NOTIFY_USER } from './types';\r\n\r\nexport const notifyUser = (message, messageType) => {\r\n  return {\r\n    type: NOTIFY_USER,\r\n    message,\r\n    messageType\r\n  };\r\n};\r\n","import React from 'react';\r\nimport classnames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Alert = props => {\r\n  const { message, messageType } = props;\r\n\r\n  return (\r\n    <div\r\n      className={classnames('alert', {\r\n        'alert-success': messageType === 'success',\r\n        'alert-danger': messageType === 'error'\r\n      })}\r\n    >\r\n      {message}\r\n    </div>\r\n  );\r\n};\r\n\r\nAlert.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n  messageType: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Alert;\r\n","import React, { Component } from 'react';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { firebaseConnect } from 'react-redux-firebase';\r\nimport PropTypes from 'prop-types';\r\nimport { notifyUser } from '../../actions/notifyActions';\r\nimport Alert from '../layout/Alert';\r\n\r\nclass Login extends Component {\r\n  state = {\r\n    email: '',\r\n    password: ''\r\n  };\r\n\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    const { firebase, history, notifyUser } = this.props;\r\n    const { email, password } = this.state;\r\n    firebase\r\n      .login({ email, password })\r\n      .then(history.push('/'))\r\n      .catch(err => notifyUser('invalid login credential', 'error'));\r\n  };\r\n\r\n  render() {\r\n    const { message, messageType } = this.props.notify;\r\n\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6 mx-auto \">\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              {message ? (\r\n                <Alert message={message} messageType={messageType} />\r\n              ) : null}\r\n              <h1 className=\"text-center\">\r\n                {' '}\r\n                <span className=\"text-primary\">\r\n                  <i className=\"fas fa-lock\">\r\n                    <h2>Login</h2>{' '}\r\n                  </i>\r\n                </span>\r\n              </h1>\r\n\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"email\">Email</label>\r\n                  <input\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    required\r\n                    className=\"form-control\"\r\n                    value={this.state.email}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"password\">password</label>\r\n                  <input\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    required\r\n                    className=\"form-control\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <input\r\n                  type=\"submit\"\r\n                  value=\"Login\"\r\n                  className=\"btn btn-primary mb-2\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLogin.propTypes = {\r\n  firebase: PropTypes.object.isRequired,\r\n  notify: PropTypes.object.isRequired,\r\n  notifyUser: PropTypes.func.isRequired\r\n};\r\n\r\nexport default compose(\r\n  firebaseConnect(),\r\n  connect(\r\n    (state, props) => ({ notify: state.notify }),\r\n    { notifyUser }\r\n  )\r\n)(Login);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Alert from '../layout/Alert';\r\nimport { notifyUser } from '../../actions/notifyActions';\r\nimport { firebaseConnect } from 'react-redux-firebase';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\n\r\nclass Register extends Component {\r\n  state = {\r\n    email: '',\r\n    password: ''\r\n    // firstName: '',\r\n    // lastName: ''\r\n  };\r\n\r\n  componentWillMount() {\r\n    const { allowRegisteration } = this.props.settings;\r\n    if (!allowRegisteration) {\r\n      this.props.history.push('/login');\r\n    }\r\n  }\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    const { firebase, notifyUser } = this.props;\r\n    const { email, password } = this.state;\r\n\r\n    firebase\r\n      .createUser({ email, password })\r\n      .catch(err => notifyUser('User already registerd', 'error'));\r\n  };\r\n  render() {\r\n    const { message, messageType } = this.props.notify;\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6 mx-auto\">\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              {message ? (\r\n                <Alert message={message} messageType={messageType} />\r\n              ) : null}\r\n              <h1 className=\"text-center\">\r\n                <span className=\"text-primary\">\r\n                  <i className=\"fas fa-user-plus\">\r\n                    <h2>Register</h2>\r\n                  </i>\r\n                </span>\r\n              </h1>\r\n              <form onSubmit={this.onSubmit}>\r\n                {/* <div className=\"form-group\">\r\n              <label htmlFor=\"firstName\">firstName</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={this.state.firstName}\r\n                name=\"firstName\"\r\n                onChange={this.onChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"firstName\">lastName</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={this.state.lastName}\r\n                name=\"lastName\"\r\n                onChange={this.onChange}\r\n              />\r\n            </div> */}\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"email\">email</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"email\"\r\n                    className=\"form-control\"\r\n                    value={this.state.email}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"password\">password</label>\r\n                  <input\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    value={this.state.password}\r\n                    name=\"password\"\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block\"\r\n                  value=\"Register\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nRegister.propTypes = {\r\n  notify: PropTypes.object.isRequired,\r\n  notifyUser: PropTypes.func.isRequired,\r\n  firebase: PropTypes.object.isRequired\r\n};\r\n\r\nexport default compose(\r\n  firebaseConnect(),\r\n  connect(\r\n    (state, props) => ({ notify: state.notify, settings: state.settings }),\r\n    { notifyUser }\r\n  )\r\n)(Register);\r\n","import React, { Component } from 'react';\r\nimport {\r\n  setDisableBalanceOnAdd,\r\n  setDisableBalanceOnEdit,\r\n  setAllowRegisteration\r\n} from '../../actions/settingActions';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Settings extends Component {\r\n  allowRegisterationOnChange = () => {\r\n    const { setAllowRegisteration } = this.props;\r\n    setAllowRegisteration();\r\n  };\r\n\r\n  disableBalanceOnAddOnChange = () => {\r\n    const { setDisableBalanceOnAdd } = this.props;\r\n    setDisableBalanceOnAdd();\r\n  };\r\n  disableBalanceOnEditOnChange = () => {\r\n    const { setDisableBalanceOnEdit } = this.props;\r\n    setDisableBalanceOnEdit();\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      allowRegisteration,\r\n      disableBalanceOnAdd,\r\n      disableBalanceOnEdit\r\n    } = this.props.settings;\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"row\">\r\n          <div className=\"col md-6\">\r\n            <Link to=\"/\">\r\n              <i className=\"fas fa-arrow-right\">Back to Dashboard</i>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n        <div className=\"card\">\r\n          <div className=\"card-header\"> Edit Settings</div>\r\n          <div className=\"card-body\">\r\n            <form>\r\n              <div className=\"form-group\">\r\n                <label>Allow Registeration</label>{' '}\r\n                <input\r\n                  type=\"checkbox\"\r\n                  name=\"allowRegisteration\"\r\n                  checked={!!allowRegisteration}\r\n                  onChange={this.allowRegisterationOnChange}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>Disable Balance on Add </label>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  name=\"disableBalanceOnAdd\"\r\n                  checked={!!disableBalanceOnAdd}\r\n                  onChange={this.disableBalanceOnAddOnChange}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>Disable Balance on Edit </label>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  name=\"disableBalanceOnEdit\"\r\n                  checked={!!disableBalanceOnEdit}\r\n                  onChange={this.disableBalanceOnEditOnChange}\r\n                />\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSettings.propTypes = {\r\n  settings: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  setAllowRegisteration: PropTypes.func.isRequired,\r\n  setDisableBalanceOnAdd: PropTypes.func.isRequired,\r\n  setDisableBalanceOnEdit: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n  (state, props) => ({\r\n    auth: state.firebase.auth,\r\n    settings: state.settings\r\n  }),\r\n  { setAllowRegisteration, setDisableBalanceOnAdd, setDisableBalanceOnEdit }\r\n)(Settings);\r\n","import {\r\n  ALLOW_REGISTERATION,\r\n  DISABLE_BALANCE_ON_ADD,\r\n  DISABLE_BALANCE_ON_EDIT\r\n} from '../actions/types';\r\n\r\nexport const setDisableBalanceOnAdd = () => {\r\n  // get settings from localstorage\r\n  const settings = JSON.parse(localStorage.getItem('settings'));\r\n\r\n  // Toggle\r\n  settings.disableBalanceOnAdd = !settings.disableBalanceOnAdd;\r\n\r\n  // set back to localstorage\r\n  localStorage.setItem('settings', JSON.stringify(settings));\r\n\r\n  return {\r\n    type: DISABLE_BALANCE_ON_ADD,\r\n    payload: settings.disableBalanceOnAdd\r\n  };\r\n};\r\n\r\nexport const setDisableBalanceOnEdit = () => {\r\n  // get settings from localstorage\r\n  const settings = JSON.parse(localStorage.getItem('settings'));\r\n\r\n  // Toggle\r\n  settings.disableBalanceOnEdit = !settings.disableBalanceOnEdit;\r\n\r\n  // set back to localstorage\r\n  localStorage.setItem('settings', JSON.stringify(settings));\r\n  return {\r\n    type: DISABLE_BALANCE_ON_EDIT,\r\n    payload: settings.disableBalanceOnEdit\r\n  };\r\n};\r\n\r\nexport const setAllowRegisteration = () => {\r\n  // get settings from localstorage\r\n  const settings = JSON.parse(localStorage.getItem('settings'));\r\n\r\n  // Toggle\r\n  settings.allowRegisteration = !settings.allowRegisteration;\r\n\r\n  // set back to localstorage\r\n  localStorage.setItem('settings', JSON.stringify(settings));\r\n  return {\r\n    type: ALLOW_REGISTERATION,\r\n    payload: settings.allowRegisteration\r\n  };\r\n};\r\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { UserIsAuthenticated, UserIsNotAuthenticated } from './helper/Auth';\nimport AppNavbar from './components/layout/AppNavbar';\nimport Dashboard from './components/layout/Dashboard';\nimport store from './store';\nimport { Provider } from 'react-redux';\nimport AddClients from './components/clients/AddClients';\nimport ClientDetails from './components/clients/ClientDetails';\nimport EditClients from './components/clients/EditClients';\nimport Login from './components/auth/Login';\nimport Register from './components/auth/Register';\nimport Settings from './components/settings/Settings';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <AppNavbar />\n            <div className=\"container\">\n              <Switch>\n                <Route\n                  exact\n                  path=\"/\"\n                  component={UserIsAuthenticated(Dashboard)}\n                />\n                <Route\n                  exact\n                  path=\"/client/add\"\n                  component={UserIsAuthenticated(AddClients)}\n                />\n                <Route\n                  exact\n                  path=\"/client/:id\"\n                  component={UserIsAuthenticated(ClientDetails)}\n                />\n                <Route\n                  exact\n                  path=\"/client/edit/:id\"\n                  component={UserIsAuthenticated(EditClients)}\n                />\n                <Route\n                  exact\n                  path=\"/login\"\n                  component={UserIsNotAuthenticated(Login)}\n                />\n                <Route\n                  exact\n                  path=\"/register\"\n                  component={UserIsNotAuthenticated(Register)}\n                />\n\n                <Route\n                  exact\n                  path=\"/settings\"\n                  component={UserIsAuthenticated(Settings)}\n                />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n// to protect import redux-auth-wrapper\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}